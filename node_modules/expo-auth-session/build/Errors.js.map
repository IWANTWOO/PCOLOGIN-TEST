{"version":3,"file":"Errors.js","sourceRoot":"","sources":["../src/Errors.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AA2B9C,MAAM,iBAAiB,GAAG;IACxB,sDAAsD;IACtD,IAAI,EAAE;QACJ,eAAe,EAAE,mJAAmJ;QACpK,mBAAmB,EAAE,kFAAkF;QACvG,aAAa,EAAE,gEAAgE;QAC/E,yBAAyB,EAAE,8FAA8F;QACzH,aAAa,EAAE,wDAAwD;QACvE,YAAY,EACV,qPAAqP;QACvP,uBAAuB,EACrB,wQAAwQ;KAC3Q;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,OAAO,aAAc,SAAQ,UAAU;IAiB3C,YAAY,MAA2B,EAAE,aAAqB;QAC5D,MAAM,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC;QACvD,MAAM,OAAO,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,YAAoB,CAAC;QACzB,IAAI,OAAO,EAAE;YACX,YAAY,GAAG,OAAO,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,gBAAgB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACzF;aAAM,IAAI,iBAAiB,EAAE;YAC5B,YAAY,GAAG,iBAAiB,CAAC;SAClC;aAAM;YACL,YAAY,GAAG,2BAA2B,CAAC;SAC5C;QACD,KAAK,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,iBAAiB,IAAI,OAAO,CAAC;QAChD,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;CACF;AAED;;GAEG;AACH,MAAM,OAAO,SAAU,SAAQ,aAAa;IAM1C,YAAY,QAAyB;QACnC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC9B,CAAC;CACF","sourcesContent":["import { CodedError } from '@unimodules/core';\n\n/**\n * Server response error.\n */\nexport interface ResponseErrorConfig extends Record<string, any> {\n  /**\n   * Error code\n   */\n  error: string;\n  /**\n   * Additional message\n   */\n  error_description?: string;\n  /**\n   * URI for more info on the error\n   */\n  error_uri?: string;\n}\n\nexport interface AuthErrorConfig extends ResponseErrorConfig {\n  /**\n   * Required only if state is used in the initial request\n   */\n  state?: string;\n}\n\nconst errorCodeMessages = {\n  // https://tools.ietf.org/html/rfc6749#section-4.1.2.1\n  auth: {\n    invalid_request: `The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed.`,\n    unauthorized_client: `The client is not authorized to request an authorization code using this method.`,\n    access_denied: `The resource owner or authorization server denied the request.`,\n    unsupported_response_type: `The authorization server does not support obtaining an authorization code using this method.`,\n    invalid_scope: 'The requested scope is invalid, unknown, or malformed.',\n    server_error:\n      'The authorization server encountered an unexpected condition that prevented it from fulfilling the request. (This error code is needed because a 500 Internal Server Error HTTP status code cannot be returned to the client via an HTTP redirect.)',\n    temporarily_unavailable:\n      'The authorization server is currently unable to handle the request due to a temporary overloading or maintenance of the server.  (This error code is needed because a 503 Service Unavailable HTTP status code cannot be returned to the client via an HTTP redirect.)',\n  },\n};\n\n/**\n * Extends https://tools.ietf.org/html/rfc6749#section-4.1.2.1\n */\nexport class ResponseError extends CodedError {\n  /**\n   * Used to assist the client developer in\n   * understanding the error that occurred.\n   */\n  description?: string;\n  /**\n   * A URI identifying a human-readable web page with\n   * information about the error, used to provide the client\n   * developer with additional information about the error.\n   */\n  uri?: string;\n  /**\n   * Raw results of the error.\n   */\n  params: Record<string, string>;\n\n  constructor(params: ResponseErrorConfig, errorCodeType: string) {\n    const { error, error_description, error_uri } = params;\n    const message = errorCodeMessages[errorCodeType][error];\n    let errorMessage: string;\n    if (message) {\n      errorMessage = message + (error_description ? `\\nMore info: ${error_description}` : '');\n    } else if (error_description) {\n      errorMessage = error_description;\n    } else {\n      errorMessage = 'An unknown error occurred';\n    }\n    super(error, errorMessage);\n    this.description = error_description ?? message;\n    this.uri = error_uri;\n    this.params = params;\n  }\n}\n\n/**\n * Extends https://tools.ietf.org/html/rfc6749#section-5.2\n */\nexport class AuthError extends ResponseError {\n  /**\n   * Required only if state is used in the initial request\n   */\n  state?: string;\n\n  constructor(response: AuthErrorConfig) {\n    super(response, 'auth');\n    this.state = response.state;\n  }\n}\n"]}