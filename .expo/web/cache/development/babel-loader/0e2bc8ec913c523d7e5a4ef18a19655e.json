{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/components/eventsmodal.js\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { globalStyles } from \"../styles/global\";\nimport Location from \"../screens/locations\";\nimport FitImage from \"react-native-fit-image\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var image = require(\"../assets/equip.jpg\");\n\n  var image2 = require(\"../assets/connect03.jpeg\");\n\n  var image3 = require(\"../assets/connect02.jpeg\");\n\n  var image4 = require(\"../assets/connect01.jpeg\");\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: globalStyles.connectContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: false,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, React.createElement(ImageBackground, {\n    source: image,\n    style: globalStyles.eventImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 22\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    style: globalStyles.closeModalContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: globalStyles.closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"close\",\n    size: 32,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  }))))))), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(ImageBackground, {\n    source: image,\n    style: globalStyles.eventItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/components/eventsmodal.js"],"names":["React","Component","useState","globalStyles","Location","FitImage","MaterialIcons","Home","navigation","modalVisible","setModalVisible","image","require","image2","image3","image4","connectContent","Alert","alert","eventImage","marginTop","closeModalContainer","closeModal","eventItem"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;;;;;AAeA,SAASC,YAAT;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAGA,eAAe,SAASC,IAAT,OAA8B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACHN,QAAQ,CAAC,KAAD,CADL;AAAA;AAAA,MACpCO,YADoC;AAAA,MACtBC,eADsB;;AAE3C,MAAMC,KAAK,GAAGC,OAAO,uBAArB;;AACA,MAAMC,MAAM,GAAGD,OAAO,4BAAtB;;AACA,MAAME,MAAM,GAAGF,OAAO,4BAAtB;;AACA,MAAMG,MAAM,GAAGH,OAAO,4BAAtB;;AAEA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,YAAY,CAACa,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,KAFf;AAGE,IAAA,OAAO,EAAEP,YAHX;AAIE,IAAA,cAAc,EAAE,0BAAM;AACpBQ,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEP,KAAzB;AAAgC,IAAA,KAAK,EAAER,YAAY,CAACgB,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbV,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,KAHH;AAIE,IAAA,KAAK,EAAEN,YAAY,CAACkB,mBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,YAAY,CAACmB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,OAApB;AAA4B,IAAA,IAAI,EAAE,EAAlC;AAAsC,IAAA,KAAK,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF,CADF,CADF,CARF,CADF,EA2BE,oBAAC,kBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbZ,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,eAAD;AACE,IAAA,MAAM,EAAEE,KADV;AAEE,IAAA,KAAK,EAAER,YAAY,CAACoB,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA3BF,CADF,CADF,CADF;AA4CD","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Button,\n  Image,\n  ImageBackground,\n  TouchableOpacity,\n  Modal,\n  TouchableHighlight,\n  StatusBar,\n  SafeAreaView,\n  ScrollView\n} from \"react-native\";\nimport { globalStyles } from \"../styles/global\";\nimport Location from \"../screens/locations\";\nimport FitImage from \"react-native-fit-image\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n//import { ScrollView } from 'react-native-gesture-handler';\n\nexport default function Home({ navigation }) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const image = require(\"../assets/equip.jpg\");\n  const image2 = require(\"../assets/connect03.jpeg\");\n  const image3 = require(\"../assets/connect02.jpeg\");\n  const image4 = require(\"../assets/connect01.jpeg\");\n\n  return (\n    <View>\n      <ScrollView>\n        <View style={globalStyles.connectContent}>\n          <Modal\n            animationType=\"slide\"\n            transparent={false}\n            visible={modalVisible}\n            onRequestClose={() => {\n              Alert.alert(\"Modal has been closed.\");\n            }}\n          >\n            <ImageBackground source={image} style={globalStyles.eventImage}>\n              <View style={{ marginTop: 22 }}>\n                <View>\n                  <TouchableHighlight\n                    onPress={() => {\n                      setModalVisible(!modalVisible);\n                    }}\n                    style={globalStyles.closeModalContainer}\n                  >\n                    <View style={globalStyles.closeModal}>\n                      <MaterialIcons name=\"close\" size={32} color=\"white\" />\n                    </View>\n                  </TouchableHighlight>\n                </View>\n              </View>\n            </ImageBackground>\n          </Modal>\n\n          <TouchableHighlight\n            onPress={() => {\n              setModalVisible(!modalVisible);\n            }}\n          >\n            <ImageBackground\n              source={image}\n              style={globalStyles.eventItem}\n            ></ImageBackground>\n          </TouchableHighlight>\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}