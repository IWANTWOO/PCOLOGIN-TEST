{"ast":null,"code":"var _jsxFileName = \"/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/Reviews/Reviews/App.js\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport * as Font from 'expo-font';\nimport Navigator from \"./routes/homeStack\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { AppLoading } from 'expo';\nimport { globalStyles } from \"./styles/global\";\nimport Home from \"./screens/home\";\nimport Connect from \"./screens/connect\";\nimport Events from \"./screens/events\";\nimport Listen from \"./screens/testscreen\";\nimport Browser from \"./screens/browser\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'monsterrat-regular': require(\"./assets/fonts/Montserrat-Regular.ttf\"),\n    'monsterrat-bold': require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n    'monsterrat-light': require(\"./assets/fonts/Montserrat-Light.ttf\")\n  });\n};\n\nfunction HomeScreen() {\n  return React.createElement(Home, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }\n  });\n}\n\nfunction ConnectScreen() {\n  return React.createElement(Connect, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  });\n}\n\nfunction EventsScreen() {\n  return React.createElement(Events, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction GiveScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Settings!3\"));\n}\n\nfunction ListenScreen() {\n  return React.createElement(Listen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  });\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    style: globalStyles.buttomNa,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home';\n          } else if (route.name === 'Connect') {\n            iconName = focused ? 'event ' : 'event';\n          } else if (route.name === 'Events') {\n            iconName = focused ? 'event' : 'event';\n          } else if (route.name === 'Give') {\n            iconName = focused ? 'event' : 'event';\n          } else if (route.name === 'Listen') {\n            iconName = focused ? 'volume-up' : 'volume-up';\n          }\n\n          return React.createElement(MaterialIcons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Connect\",\n    component: ConnectScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Events\",\n    component: EventsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Give\",\n    component: GiveScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Listen\",\n    component: ListenScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/Reviews/Reviews/App.js"],"names":["React","Ionicons","createBottomTabNavigator","NavigationContainer","Font","Navigator","MaterialIcons","AppLoading","globalStyles","Home","Connect","Events","Listen","Browser","getFonts","loadAsync","require","HomeScreen","ConnectScreen","EventsScreen","GiveScreen","flex","justifyContent","alignItems","ListenScreen","Tab","App","buttomNa","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":";AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAGA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,SAAP;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,YAAT;AAGA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMV,IAAI,CAACW,SAAL,CAAe;AACpC,0BAAsBC,OAAO,yCADO;AAEpC,uBAAmBA,OAAO,sCAFU;AAGpC,wBAAoBA,OAAO;AAHS,GAAf,CAAN;AAAA,CAAjB;;AASA,SAASC,UAAT,GAAsB;AACpB,SACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAGD;;AAED,SAASC,aAAT,GAAyB;AACvB,SAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAKD;;AACD,SAASC,YAAT,GAAwB;AACtB,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AACD,SAASC,UAAT,GAAsB;AACpB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAKD;;AACD,SAASC,YAAT,GAAwB;AACtB,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AACD,IAAMC,GAAG,GAAGvB,wBAAwB,EAApC;AAEA,eAAe,SAASwB,GAAT,GAAe;AAC5B,SACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAElB,YAAY,CAACmB,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACzBD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,MAA9B;AACD,WAFD,MAEO,IAAIF,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AACnCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,QAAH,GAAc,OAAhC;AACD,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6B;AAClCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,OAAH,GAAa,OAA/B;AACD,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AAChCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,OAAH,GAAa,OAA/B;AACD,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6B;AAClCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,WAAH,GAAiB,WAAnC;AACD;;AAGD,iBAAO,oBAAC,aAAD;AAAe,YAAA,IAAI,EAAEG,QAArB;AAA+B,YAAA,IAAI,EAAED,IAArC;AAA2C,YAAA,KAAK,EAAED,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAlB4B,OAAhB;AAAA,KADjB;AAqBE,IAAA,aAAa,EAAE;AACbI,MAAAA,eAAe,EAAE,QADJ;AAEbC,MAAAA,iBAAiB,EAAE;AAFN,KArBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA0BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEnB,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,EA2BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAEC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,EA4BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,EA6BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,EA8BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEI,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,CADF,CADF;AAoCD","sourcesContent":["// You can import Ionicons from @expo/vector-icons if you use Expo or\n// react-native-vector-icons/Ionicons otherwise.\nimport * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\n\n//custom fonts\nimport * as Font from 'expo-font';\nimport Navigator from './routes/homeStack';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport { AppLoading } from 'expo';\nimport { globalStyles } from './styles/global';\n\n//SCREENS\nimport Home from './screens/home'\nimport Connect from './screens/connect'\nimport Events from './screens/events'\nimport Listen from './screens/testscreen'\nimport Browser from './screens/browser'\n\nconst getFonts = () => Font.loadAsync({\n  'monsterrat-regular': require('./assets/fonts/Montserrat-Regular.ttf'),\n  'monsterrat-bold': require('./assets/fonts/Montserrat-Bold.ttf'),\n  'monsterrat-light': require('./assets/fonts/Montserrat-Light.ttf')\n\n});\n\n\n\nfunction HomeScreen() {\n  return (\n     <Home />\n    );\n}\n\nfunction ConnectScreen() {\n  return (\n    \n      <Connect/>\n    \n  );\n}\nfunction EventsScreen() {\n  return (\n    <Events/>\n  );\n}\nfunction GiveScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!3</Text>\n    </View>\n  );\n}\nfunction ListenScreen() {\n  return (\n    <Listen/>\n  );\n}\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer style={globalStyles.buttomNa}>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused ? 'home' : 'home'  ;\n            } else if (route.name === 'Connect') {\n              iconName = focused ? 'event ' : 'event';\n            } else if (route.name === 'Events') {\n              iconName = focused ? 'event' : 'event';\n            } else if (route.name === 'Give') {\n              iconName = focused ? 'event' : 'event';\n            } else if (route.name === 'Listen') {\n              iconName = focused ? 'volume-up' : 'volume-up';\n            }\n\n            // You can return any component that you like here!\n            return <MaterialIcons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}\n      >\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\n        <Tab.Screen name=\"Connect\" component={ConnectScreen} />\n        <Tab.Screen name=\"Events\" component={EventsScreen} />\n        <Tab.Screen name=\"Give\" component={GiveScreen} />\n        <Tab.Screen name=\"Listen\" component={ListenScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}