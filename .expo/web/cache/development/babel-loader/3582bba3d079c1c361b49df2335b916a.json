{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/screens/events.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { WebView } from \"react-native-webview\";\nimport { Header, LearnMoreLinks, Colors, DebugInstructions, ReloadInstructions } from \"react-native/Libraries/NewAppScreen\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.handleBackButton = function () {\n      console.log(_this.state);\n      var canGoBack = _this.state.canGoBack;\n\n      if (canGoBack) {\n        _this.webView.goBack();\n\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    _this.startingUrl = \"http://google.com\";\n    _this.handleBackButton = _this.handleBackButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      BackHandler.addEventListener(\"hardwareBackPress\", this.handleBackButton);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener(\"hardwareBackPress\", this.handleBackButton);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, React.createElement(WebView, {\n        source: {\n          uri: this.startingUrl\n        },\n        style: {\n          marginTop: 20\n        },\n        ref: function ref(webView) {\n          return _this2.webView = webView;\n        },\n        injectedJavaScript: \"\\n          (function() {\\n            function wrap(fn) {\\n              return function wrapper() {\\n                var res = fn.apply(this, arguments);\\n                window.ReactNativeWebView.postMessage('navigationStateChange');\\n                return res;\\n              }\\n            }\\n\\n            history.pushState = wrap(history.pushState);\\n            history.replaceState = wrap(history.replaceState);\\n            window.addEventListener('popstate', function() {\\n              window.ReactNativeWebView.postMessage('navigationStateChange');\\n            });\\n          })();\\n\\n          true;\\n        \",\n        onMessage: function onMessage(_ref) {\n          var state = _ref.nativeEvent;\n\n          if (state.data === \"navigationStateChange\") {\n            _this2.setState({\n              canGoBack: state.canGoBack\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/screens/events.js"],"names":["React","Fragment","WebView","Header","LearnMoreLinks","Colors","DebugInstructions","ReloadInstructions","App","props","handleBackButton","console","log","state","canGoBack","webView","goBack","startingUrl","bind","BackHandler","addEventListener","removeEventListener","uri","marginTop","nativeEvent","data","setState","Component"],"mappings":";;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAUA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SACEC,MADF,EAEEC,cAFF,EAGEC,MAHF,EAIEC,iBAJF,EAKEC,kBALF,QAMO,qCANP;;IAQMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAenBC,gBAfmB,GAeA,YAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB;AADuB,UAEfC,SAFe,GAED,MAAKD,KAFJ,CAEfC,SAFe;;AAGvB,UAAIA,SAAJ,EAAe;AACb,cAAKC,OAAL,CAAaC,MAAb;;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,eAAO,KAAP;AACD;AACF,KAxBkB;;AAEjB,UAAKC,WAAL,GACE,mBADF;AAEA,UAAKP,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBQ,IAAtB,+BAAxB;AAJiB;AAKlB;;;;wCAEmB;AAClBC,MAAAA,WAAW,CAACC,gBAAZ,CAA6B,mBAA7B,EAAkD,KAAKV,gBAAvD;AACD;;;2CAEsB;AACrBS,MAAAA,WAAW,CAACE,mBAAZ,CAAgC,mBAAhC,EAAqD,KAAKX,gBAA1D;AACD;;;6BAaQ;AAAA;;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,MAAM,EAAE;AAAEY,UAAAA,GAAG,EAAE,KAAKL;AAAZ,SADV;AAEE,QAAA,KAAK,EAAE;AAAEM,UAAAA,SAAS,EAAE;AAAb,SAFT;AAGE,QAAA,GAAG,EAAE,aAAAR,OAAO;AAAA,iBAAK,MAAI,CAACA,OAAL,GAAeA,OAApB;AAAA,SAHd;AAIE,QAAA,kBAAkB,qnBAJpB;AAuBE,QAAA,SAAS,EAAE,yBAA4B;AAAA,cAAZF,KAAY,QAAzBW,WAAyB;;AACrC,cAAIX,KAAK,CAACY,IAAN,KAAe,uBAAnB,EAA4C;AAE1C,YAAA,MAAI,CAACC,QAAL,CAAc;AACZZ,cAAAA,SAAS,EAAED,KAAK,CAACC;AADL,aAAd;AAGD;AACF,SA9BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAoCD;;;;EAhEed,KAAK,CAAC2B,S;;AAmExB,eAAenB,GAAf","sourcesContent":["\nimport React, { Fragment } from \"react\";\nimport {\n  SafeAreaView,\n  StyleSheet,\n  ScrollView,\n  View,\n  Text,\n  BackHandler,\n  StatusBar\n} from \"react-native\";\nimport { WebView } from \"react-native-webview\";\nimport {\n  Header,\n  LearnMoreLinks,\n  Colors,\n  DebugInstructions,\n  ReloadInstructions\n} from \"react-native/Libraries/NewAppScreen\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.startingUrl =\n      \"http://google.com\";\n    this.handleBackButton = this.handleBackButton.bind(this);\n  }\n\n  componentDidMount() {\n    BackHandler.addEventListener(\"hardwareBackPress\", this.handleBackButton);\n  }\n\n  componentWillUnmount() {\n    BackHandler.removeEventListener(\"hardwareBackPress\", this.handleBackButton);\n  }\n\n  handleBackButton = () => {\n    console.log(this.state);\n    const { canGoBack } = this.state;\n    if (canGoBack) {\n      this.webView.goBack();\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <WebView\n          source={{ uri: this.startingUrl }}\n          style={{ marginTop: 20 }}\n          ref={webView => (this.webView = webView)}\n          injectedJavaScript={`\n          (function() {\n            function wrap(fn) {\n              return function wrapper() {\n                var res = fn.apply(this, arguments);\n                window.ReactNativeWebView.postMessage('navigationStateChange');\n                return res;\n              }\n            }\n\n            history.pushState = wrap(history.pushState);\n            history.replaceState = wrap(history.replaceState);\n            window.addEventListener('popstate', function() {\n              window.ReactNativeWebView.postMessage('navigationStateChange');\n            });\n          })();\n\n          true;\n        `}\n          onMessage={({ nativeEvent: state }) => {\n            if (state.data === \"navigationStateChange\") {\n              // Navigation state updated, can check state.canGoBack, etc.\n              this.setState({\n                canGoBack: state.canGoBack\n              });\n            }\n          }}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}