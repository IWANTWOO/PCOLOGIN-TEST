{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/screens/loginscreens/Loadingscreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firebase from 'firebase';\n\nvar LoadingScreen = function (_Component) {\n  _inherits(LoadingScreen, _Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    var _this;\n\n    _classCallCheck(this, LoadingScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.checkIfLoggedIn = function () {\n      firebase.auth().onAuthStateChanged(function (user) {\n        console.log('authstatecalled');\n\n        if (user) {\n          this.props.navigation.navigate('DashboardScreen');\n        } else {\n          this.props.navigation.navigate('LoginScreen');\n        }\n      }.bind(_assertThisInitialized(_this)));\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkIfLoggedIn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return LoadingScreen;\n}(Component);\n\nexport default LoadingScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/screens/loginscreens/Loadingscreen.js"],"names":["React","Component","firebase","LoadingScreen","checkIfLoggedIn","auth","onAuthStateChanged","user","console","log","props","navigation","navigate","bind","styles","container","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAOA,OAAOC,QAAP,MAAqB,UAArB;;IAEMC,a;;;;;;;;;;;;;;;;UAMNC,e,GAAkB,YAAK;AACnBF,MAAAA,QAAQ,CAACG,IAAT,GAAgBC,kBAAhB,CACI,UAASC,IAAT,EAAe;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,YAAIF,IAAJ,EAAU;AACN,eAAKG,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,iBAA/B;AACH,SAFD,MAEO;AACH,eAAKF,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B;AACH;AACJ,OAPD,CAOEC,IAPF,+BADJ;AAUH,K;;;;;;;wCAfmB;AAChB,WAAKT,eAAL;AACH;;;6BAeY;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EAzBuBd,S;;AA2B5B,eAAeE,aAAf;AAEA,IAAMW,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE;AAHT;AADkB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { \n    View,\n    Text,\n    StyleSheet,\n    ActivityIndicator,\n} from \"react-native\";\nimport firebase from 'firebase';\n\nclass LoadingScreen extends Component {\n\ncomponentDidMount() {\n    this.checkIfLoggedIn();\n}\n\ncheckIfLoggedIn = () =>{\n    firebase.auth().onAuthStateChanged(\n        function(user) {\n            console.log('authstatecalled')\n            if (user) {\n                this.props.navigation.navigate('DashboardScreen');\n            } else {\n                this.props.navigation.navigate('LoginScreen');\n            }\n        }.bind(this)\n    );\n};\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <ActivityIndicator size='large' />\n            </View>\n        );\n    }\n}\nexport default LoadingScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n});"]},"metadata":{},"sourceType":"module"}