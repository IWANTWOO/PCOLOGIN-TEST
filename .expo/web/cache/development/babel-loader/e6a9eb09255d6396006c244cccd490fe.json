{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/screens/events.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { globalStyles } from \"../styles/global\";\nimport Location from \"../screens/locations\";\nimport FitImage from \"react-native-fit-image\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport Eventsmodal from \"../components/eventsmodal\";\nimport { WebView } from 'react-native-webview';\nvar INJECTEDJAVASCRIPT = 'function hideHeaderToggle() {var headerToggle = document.getElementsByClassName(\"cco-header\"), i;for (i = 0; i < headerToggle.length; i += 1) {headerToggle[i].style.display = \"none\";};}; hideHeaderToggle(); const meta = document.createElement(\\'meta\\'); meta.setAttribute(\\'content\\', \\'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\\'); meta.setAttribute(\\'name\\', \\'viewport\\'); document.getElementsByTagName(\\'head\\')[0].appendChild(meta);';\n\nvar Foo = function (_Component) {\n  _inherits(Foo, _Component);\n\n  var _super = _createSuper(Foo);\n\n  function Foo() {\n    var _this;\n\n    _classCallCheck(this, Foo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      key: 1\n    };\n\n    _this.resetWebViewToInitialUrl = function () {\n      _this.setState({\n        key: _this.state.key + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Foo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(WebView, {\n        key: this.state.key,\n        source: {\n          uri: yourInitialUrl\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Foo;\n}(Component);","map":{"version":3,"sources":["/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/screens/events.js"],"names":["React","Component","useState","globalStyles","Location","FitImage","MaterialIcons","Eventsmodal","WebView","INJECTEDJAVASCRIPT","Foo","state","key","resetWebViewToInitialUrl","setState","uri","yourInitialUrl"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;;;;;;AAgBA,SAASC,YAAT;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,OAAOC,WAAP;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,IAAMC,kBAAkB,GAAG,mdAA3B;;IAGMC,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,GAAG,EAAE;AADC,K;;UAIRC,wB,GAA2B,YAAM;AAC/B,YAAKC,QAAL,CAAc;AACZF,QAAAA,GAAG,EAAE,MAAKD,KAAL,CAAWC,GAAX,GAAiB;AADV,OAAd;AAGD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,OAAD;AACE,QAAA,GAAG,EAAG,KAAKD,KAAL,CAAWC,GADnB;AAEE,QAAA,MAAM,EAAE;AAAEG,UAAAA,GAAG,EAAEC;AAAP,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;;;;EAlBef,S","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Button,\n  Image,\n  ImageBackground,\n  TouchableOpacity,\n  Modal,\n  TouchableHighlight,\n  StatusBar,\n  SafeAreaView,\n  ScrollView,\n  Linking,\n} from \"react-native\";\nimport { globalStyles } from \"../styles/global\";\nimport Location from \"../screens/locations\";\nimport FitImage from \"react-native-fit-image\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n//import { ScrollView } from 'react-native-gesture-handler';\nimport Eventsmodal from \"../components/eventsmodal\";\nimport { WebView } from 'react-native-webview';\n\nconst INJECTEDJAVASCRIPT = 'function hideHeaderToggle() {var headerToggle = document.getElementsByClassName(\"cco-header\"), i;for (i = 0; i < headerToggle.length; i += 1) {headerToggle[i].style.display = \"none\";};}; hideHeaderToggle(); const meta = document.createElement(\\'meta\\'); meta.setAttribute(\\'content\\', \\'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\\'); meta.setAttribute(\\'name\\', \\'viewport\\'); document.getElementsByTagName(\\'head\\')[0].appendChild(meta);'\n\n\nclass Foo extends Component {\n  state = {\n    key: 1\n  };\n\n  resetWebViewToInitialUrl = () => {\n    this.setState({\n      key: this.state.key + 1\n    });\n  };\n\n  render() {\n    return (\n      <WebView\n        key={ this.state.key }\n        source={{ uri: yourInitialUrl }}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}