{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/screens/events.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar MyWeb = function (_Component) {\n  _inherits(MyWeb, _Component);\n\n  var _super = _createSuper(MyWeb);\n\n  function MyWeb() {\n    var _this;\n\n    _classCallCheck(this, MyWeb);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.mainUrl = \"https://facebook.github.io/\";\n    _this.state = {\n      url: _this.mainUrl\n    };\n    return _this;\n  }\n\n  _createClass(MyWeb, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return [React.createElement(WebView, {\n        key: \"comp1\",\n        ref: function ref(_ref) {\n          _this2.webView.ref = _ref;\n        },\n        source: {\n          uri: this.state.url\n        },\n        onLoad: function onLoad(e) {\n          _this2.state.url = e.nativeEvent.url;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }\n      }), React.createElement(Button, {\n        title: \"test\",\n        key: \"comp2\",\n        onPress: function onPress() {\n          if (_this2.state.url == _this2.mainUrl) {\n            _this2.webView.ref.reload();\n          } else {\n            _this2.setState(function (prevState) {\n              return {\n                url: _this2.mainUrl\n              };\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }\n      })];\n    }\n  }]);\n\n  return MyWeb;\n}(Component);\n\nexport { MyWeb as default };","map":{"version":3,"sources":["/Users/andrewnaysmith/Documents/00_websites/RNequippers/reviews/reviews/Reviews/screens/events.js"],"names":["MyWeb","mainUrl","state","url","ref","webView","uri","e","nativeEvent","reload","setState","prevState","Component"],"mappings":";;;;;;;;;;;IAAqBA,K;;;;;;;;;;;;;;;UACnBC,O,GAAU,6B;UACVC,K,GAAQ;AACNC,MAAAA,GAAG,EAAE,MAAKF;AADJ,K;;;;;;6BAIC;AAAA;;AACP,aAAO,CACL,oBAAC,OAAD;AACE,QAAA,GAAG,EAAC,OADN;AAEE,QAAA,GAAG,EACD,aAAAG,IAAG,EAAI;AACL,UAAA,MAAI,CAACC,OAAL,CAAaD,GAAb,GAAmBA,IAAnB;AACD,SALL;AAOE,QAAA,MAAM,EACJ;AACEE,UAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC;AADlB,SARJ;AAYE,QAAA,MAAM,EACJ,gBAAAI,CAAC,EAAI;AAEH,UAAA,MAAI,CAACL,KAAL,CAAWC,GAAX,GAAiBI,CAAC,CAACC,WAAF,CAAcL,GAA/B;AACD,SAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAoBP,oBAAC,MAAD;AACA,QAAA,KAAK,EAAC,MADN;AAEE,QAAA,GAAG,EAAC,OAFN;AAGE,QAAA,OAAO,EACL,mBAAM;AACJ,cAAI,MAAI,CAACD,KAAL,CAAWC,GAAX,IAAkB,MAAI,CAACF,OAA3B,EAAoC;AAClC,YAAA,MAAI,CAACI,OAAL,CAAaD,GAAb,CAAiBK,MAAjB;AACD,WAFD,MAEO;AACL,YAAA,MAAI,CAACC,QAAL,CAAc,UAAAC,SAAS;AAAA,qBAAK;AAC1BR,gBAAAA,GAAG,EAAE,MAAI,CAACF;AADgB,eAAL;AAAA,aAAvB;AAGD;AACF,SAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBO,CAAP;AAoCD;;;;EA3CgCW,S;;SAAdZ,K","sourcesContent":["export default class MyWeb extends Component {\n  mainUrl = \"https://facebook.github.io/\";\n  state = {\n    url: this.mainUrl,\n  };\n\n  render() {\n    return [\n      <WebView\n        key=\"comp1\"\n        ref={\n          ref => {\n            this.webView.ref = ref;\n          }\n        }\n        source={\n          {\n            uri: this.state.url\n          }\n        }\n        onLoad={\n          e => {\n            // Update the state so url changes could be detected by React and we could load the mainUrl.\n            this.state.url = e.nativeEvent.url;\n          }\n        }\n    />,\n    <Button\n    title=\"test\"\n      key=\"comp2\"\n      onPress={\n        () => {\n          if (this.state.url == this.mainUrl) {\n            this.webView.ref.reload();\n          } else {\n            this.setState(prevState => ({\n              url: this.mainUrl\n            }));\n          }\n        }\n      }\n    />\n    ];\n  }\n}"]},"metadata":{},"sourceType":"module"}